{"version":3,"sources":["Header.jsx","footer.jsx","config.js","CreateNote.jsx","Note.jsx","App.jsx","Login.jsx","Logos/google.png","index.js"],"names":["Header","props","className","Tooltip","title","user1","src","userPhoto","onClick","firebase","auth","signOut","ReactDOM","render","document","getElementById","Footer","year","Date","getFullYear","firedb","initializeApp","apiKey","authDomain","projectId","databaseURL","storageBucket","messagingSenderId","appId","measurementId","CreateNote","useState","content","note","setNote","expand","setExpand","InputEvent","event","target","name","value","prevData","database","ref","push","alert","method","type","onChange","placeholder","autoComplete","rows","column","Note","editTitle","setEditTitle","editContent","setEditContent","onInput","currentTarget","textContent","contentEditable","suppressContentEditableWarning","currUser","currentUser","refe","displayName","child","array","id","update","deleteItem","App","addItem","setAddItem","useEffect","on","notes","notesArr","data","val","id1","onDelete","filter","currData","idx","remove","map","index","loadApp","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithPopup","then","result","credential","accessToken","user","catch","error","console","log","onAuthStateChanged","uid","photoURL","ReactDom","Login"],"mappings":"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","file":"static/js/main.52bc0bc5.chunk.js","sourcesContent":["import React from 'react';\r\nimport './index.css';\r\nimport firebase from 'firebase';\r\nimport Login from './Login';\r\nimport ReactDOM from 'react-dom';\r\nimport { Tooltip } from '@material-ui/core';\r\nconst Header = (props)=>{\r\n  const onLogOut = () =>{\r\n    firebase.auth().signOut();\r\n    ReactDOM.render(\r\n      <>\r\n      <Login />\r\n      </>,\r\n      document.getElementById('root')\r\n    )\r\n    \r\n  };\r\nreturn (\r\n    <>\r\n    <div className=\"div\">\r\n  <h1 className=\"heading\">KEEP NOTES\r\n  <Tooltip title={props.user1}>\r\n  <img src={props.userPhoto} className=\"profilePic\"/>\r\n  </Tooltip>\r\n  <button className=\"logout\" onClick={onLogOut}>LOG OUT</button>\r\n  </h1>\r\n  </div>\r\n    </>\r\n)\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst Footer = () =>{\r\n    const year= new Date().getFullYear();\r\n    return (\r\n        <>\r\n        <footer className=\"footer\">\r\n            <p>copyright @ {year}</p>\r\n        </footer>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Footer;","import firebase from \"firebase/app\";\r\nimport 'firebase/database'\r\nvar DB_CONFIG = {\r\n  apiKey: \"AIzaSyApODP75HfV80QD-CuZZulPDkJiJclBlCc\",\r\n  authDomain: \"keepnotes-c0d21.firebaseapp.com\",\r\n  projectId: \"keepnotes-c0d21\",\r\n  databaseURL: \"https://keepnotes-c0d21-default-rtdb.firebaseio.com/\",\r\n  storageBucket: \"keepnotes-c0d21.appspot.com\",\r\n  messagingSenderId: \"201020091433\",\r\n  appId: \"1:201020091433:web:e27a27a30207a0ad6bc038\",\r\n  measurementId: \"G-MS0YJX59RW\"\r\n};\r\nconst firedb=firebase.initializeApp(DB_CONFIG);\r\nexport default firedb;\r\n","import React, { useEffect, useState } from 'react';\r\nimport firedb from './config';\r\nconst CreateNote = (props) =>{\r\n\r\n    const [note,setNote]= useState({\r\n        title: \"\",\r\n        content: \"\"\r\n    });\r\n\r\n    const [expand,setExpand]= useState(false);\r\n    const InputEvent = (event) =>{\r\n\r\n        const {name,value} = event.target;\r\n        setNote((prevData) =>{\r\n            return {\r\n                ...prevData,\r\n                [name]: value,            \r\n            }\r\n        })\r\n    };\r\n    const addEvent = () =>{//async(e) =>{\r\n        const {title,content} = note;\r\n        let ref= firedb.database().ref(`${props.user1}/keepNotes`);\r\n        if (title && content){\r\n        firedb.database().ref(`${props.user1}/keepNotes`).push({\r\n            title: note.title,\r\n            content: note.content,\r\n            })\r\n            \r\n        alert('Data Saved!');\r\n        //props.passNote(note);\r\n        setNote({\r\n            title: '',\r\n            content: '',\r\n        })\r\n        }\r\n        else{\r\n            alert('Enter all the data!');\r\n        }\r\n\r\n        \r\n    }\r\n    const expandIt = () =>{\r\n        setExpand(true);\r\n    };\r\n    return (\r\n        <>\r\n        <div className=\"mainNote\">   \r\n                <button \r\n                onClick={addEvent}\r\n                className=\"button1\">+</button>\r\n            <form method=\"POST\">\r\n                <input type=\"text\" \r\n                name=\"title\" \r\n                value={note.title}\r\n                onChange={InputEvent}\r\n                placeholder=\"Your title goes here\" autoComplete=\"off\"\r\n                onClick={expandIt}\r\n                className=\"input\" /> &nbsp;&nbsp;&nbsp;\r\n                <br />\r\n                <br />\r\n                {expand?\r\n                <textarea \r\n                name=\"content\"\r\n                value={note.content}\r\n                onChange={InputEvent}\r\n                \r\n                rows='' column='' placeholder='Write something...' className=\"area\"/>\r\n                :null}\r\n                </form>\r\n        </div>\r\n            \r\n        </>\r\n    )\r\n};\r\n\r\nexport default CreateNote;","import firebase from 'firebase';\r\nimport React, { useLayoutEffect, useState } from 'react';\r\nimport firedb from './config';\r\n\r\nconst Note = (props) =>{\r\n    const [editTitle,setEditTitle]= useState({\r\n        title: \"\"\r\n    })\r\n    const [editContent,setEditContent]= useState({\r\n        content: \"\"\r\n    })\r\n    const deleteNote = () =>{\r\n        props.deleteItem(props.id);\r\n    };\r\n\r\n    const InpEvent = (event) =>{\r\n        setEditTitle({\r\n            title: event.currentTarget.textContent\r\n        })\r\n    };\r\n\r\n    const InpEvent2 = (event) =>{\r\n        setEditContent({\r\n        content : event.currentTarget.textContent\r\n        })\r\n    };\r\n\r\n    const onEdit = () =>{\r\n        let currUser=firebase.auth().currentUser;\r\n        //console.log(currUser.displayName)\r\n        const refe= firebase.database().ref(`${currUser.displayName}/keepNotes`).child(props.array[props.id]['id1'])\r\n        if (editContent.content && editTitle.title){\r\n            refe.update({\r\n                title: editTitle.title,\r\n                content: editContent.content\r\n            })\r\n        }\r\n        else if (editContent.content){\r\n            refe.update({\r\n                content: editContent.content\r\n            })\r\n        }\r\n        else if (editTitle.title){\r\n            refe.update({\r\n                title: editTitle.title\r\n            })\r\n        }\r\n        else{\r\n            alert(\"Please update the data first!\");\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n        <div className=\"maindiv\">\r\n            <div className=\"note\">\r\n                <h3 onInput={InpEvent} className=\"bordercolor\" contentEditable={true} suppressContentEditableWarning=\"true\">{props.title}</h3>\r\n                <p onInput={InpEvent2} className=\"bordercolor\" contentEditable={true}  suppressContentEditableWarning=\"true\">{props.content}</p>\r\n                <button className=\"edit\" onClick={onEdit}>🖊️</button>\r\n                <button className=\"delButton\"\r\n                onClick={deleteNote}> - </button>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Note;","import React, { useEffect, useState } from 'react';\r\nimport Header from './Header';\r\nimport Footer from './footer';\r\nimport CreateNote from './CreateNote';\r\nimport Note from './Note';\r\nimport firedb from './config';\r\nconst App = (props) =>{\r\n    const [addItem,setAddItem]=useState([]);\r\n    \r\n    useEffect(()=>{\r\n        //console.log(props.user1)\r\n        const reference = firedb.database().ref(`${props.user1}/keepNotes`);\r\n            reference.on('value',(notes)=>{\r\n            let notesArr=[]\r\n            const data= notes.val()\r\n            for (let id1 in data){\r\n                notesArr.push({id1,...data[id1]})\r\n            }\r\n            setAddItem(()=>{\r\n                return [...notesArr]\r\n            })\r\n        })\r\n    },[])\r\n    \r\n    const addNote = (note) =>{\r\n        setAddItem((prevData)=>{\r\n            return [...prevData, note]\r\n        });\r\n    };\r\nconst onDelete = (id) =>{\r\n    setAddItem((prevData) => \r\n    prevData.filter((currData,idx) =>{\r\n        return idx!==id;\r\n    })\r\n    )\r\n    const refe= firedb.database().ref(`${props.user1}/keepNotes`)\r\n    refe.child(addItem[id]['id1']).remove()\r\n};\r\n    return (\r\n        <>\r\n        <Header user1={props.user1} userPhoto={props.userPhoto}/>\r\n        <CreateNote user1={props.user1}/>\r\n        {addItem.map((val,index)=>{\r\n            return <Note\r\n                array={addItem}\r\n                key={index}\r\n                id={index}\r\n                title={val.title}\r\n                content={val.content}\r\n                deleteItem={onDelete}\r\n                />\r\n            \r\n        })}\r\n        <Footer />\r\n        \r\n        </>\r\n    )\r\n};\r\n\r\nexport default App;\r\n","import React, { useEffect } from \"react\";\r\nimport ReactDom from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport firebase from \"firebase\";\r\nimport firedb from \"./config\";\r\nimport google from './Logos/google.png';\r\n\r\nconst loadApp = () =>{\r\n  var provider = new firebase.auth.GoogleAuthProvider();\r\n    provider.setCustomParameters({\r\n      prompt: 'select_account'\r\n    });\r\n    firebase.auth()\r\n    .signInWithPopup(provider)\r\n    .then((result) => {\r\n      /** @type {firebase.auth.OAuthCredential} */\r\n      var credential = result.credential;\r\n  \r\n      // This gives you a Google Access Token. You can use it to access the Google API.\r\n      var token = credential.accessToken;\r\n      // The signed-in user info.\r\n      var user = result.user;\r\n\r\n      // ...\r\n    }).catch((error) => {\r\n      console.log(error)\r\n    });\r\n  }\r\n  firebase.auth().onAuthStateChanged((user) => {\r\n    \r\n    if (user) {\r\n      var uid = user.uid;\r\n      //console.log(user.displayName);\r\n      const refe=firedb.database().ref(`Users/${user.displayName}`)\r\n      var user1=user.displayName;\r\n      var userPhoto= user.photoURL;\r\n      ReactDom.render(\r\n        <App user1={user.displayName} userPhoto={user.photoURL}/>,\r\n        document.getElementById('root')\r\n        )\r\n    }\r\n  });\r\n  \r\nconst Login = () =>{\r\n    return (\r\n        <>\r\n        <div className=\"div\">\r\n        <h1 className=\"heading\">KEEP NOTES</h1>\r\n        </div>\r\n        <center>\r\n          <div className=\"loginForm\">\r\n            <h2 className=\"loginHeading\">LOGIN</h2>\r\n            <button className=\"login\" onClick={loadApp}>\r\n            <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/5/53/Google_%22G%22_Logo.svg/512px-Google_%22G%22_Logo.svg.png\" className=\"googleLogo\"/>\r\n            &nbsp;&nbsp;Login With Google\r\n            </button>\r\n        </div>\r\n        </center>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Login;","export default __webpack_public_path__ + \"static/media/google.b208c823.png\";","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Login from './Login';\nReactDOM.render(\n  <Login />,\n  document.getElementById('root')\n);"],"sourceRoot":""}